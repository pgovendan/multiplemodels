%this file updates SIL test harness model and create s-function.
%Inputs:  Harness model - generated by SLDV
%Outputs: Updated harness model(SIL) - with toworkspace block

function [harness_name] = SIL_Test_Updation(model_name)
try
		
    load_system(model_name);

    out_ports = find_system(model_name,'LookUnderMasks','all','SearchDepth',1,'BlockType','Outport');


    out_port_names = get_param(out_ports,'Name'); % extract name of the block
    out_port_names = replace(out_port_names,' ','_');

    for x = 1 : length(out_ports)
        out_port_names_1{x}  = strcat(out_port_names{x},'_SIL');
    end

    if length(out_ports) == 1               %Code for checking bus is present on top level or not
        buscreator = find_system(model_name,'BlockType','BusCreator');
        if ~isempty(buscreator)             %If bus creator is present
            print_logdata('Please add the bus selector if required and select required output signals');
        end
    end

    for x = 1 : length(out_ports)

        pc = get_param(out_ports{x},'Position');
        pc(3) = pc(3) + 200;

        delete_block(out_ports{x});

        add_block('Simulink/Sinks/To Workspace',out_ports{x});
        set_param(out_ports{x},'Position',pc);
        set_param(out_ports{x},'VariableName',out_port_names_1{x});
        set_param(out_ports{x},'SaveFormat','Structure With Time');
        out_port_names_list = out_port_names_1;
    end

    model_name_old = erase(model_name,'_harness');
    model_name_new = strcat(model_name_old,'_SIL_Test.mdl');

    close_system(model_name_new, 0);
    save_system(model_name,model_name_new);
    harness_name = model_name_new;
    
    mname = model_name_new(1:end-4); %leave the .mdl extension from the model name    
    create_s_fcn(mname);
   
    %Disable Coverage setting and save the system
    load_system(mname);
    set_param(mname, 'CovHtmlReporting', 'off');
    set_param(mname, 'CovModelRefEnable', 'off');
    set_param(mname, 'CovExternalEMLEnable', 'off');
    set_param(mname, 'CovEnable', 'off');
    save_system(mname); 
    close_system(mname);
   
    disp('SIL Harness Created Successfully');    
%     exit(0);
catch
    bdclose all;
    disp('Error in SIL Harness Creation');
%     exit(1);
end
end